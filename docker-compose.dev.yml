services:
  nginx:
    image: nginx:stable
    environment:
      TZ: Asia/Taipei
    volumes:
      - ./nginx/nginx.crt:/usr/share/nginx/ssl/nginx.crt
      - ./nginx/nginx.key:/usr/share/nginx/ssl/nginx.key
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/cache:/etc/nginx/cache
      - ./nginx/log:/var/log/nginx
      - ./submodules/webui/out:/usr/share/nginx/www
    ports:
      - 8080:8080
      - 8443:8443
    restart: always

  # Main service container
  my_openai_frontend:
    build:
      context: .
      dockerfile: Dockerfile
    image: my_openai_frontend/server:latest
    volumes:
      - .:/workspace
    working_dir: /workspace
    expose:
      - 3000
    # ports:
    #   - "3000:3000"
    restart: unless-stopped
    command: tail -f /dev/null

  # React development container
  webui:
    build:
      context: .
      dockerfile: submodules/webui/Dockerfile
    image: my_openai_frontend/webui:latest
    volumes:
      - .:/workspace
    working_dir: /workspace
    expose:
      - 8080
    # ports:
    #   - "8080:8080"
    restart: unless-stopped
    command: tail -f /dev/null

  # PostgreSQL database
  postgres:
    image: postgres:latest
    environment:
      - POSTGRES_USER=postgresql
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=ai_platform_auth
    expose:
      - 5432
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local