events {

}
# -------- Define stream Services -------- #
stream {

}
# -------- Define HTTP Services -------- #
http {
    # Global Settings for HTTP Servers 
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                '$status $body_bytes_sent "$http_referer" '
                '"$http_user_agent" "$http_x_forwarded_for"';
    error_log  /var/log/nginx/error.log warn;
    access_log  /var/log/nginx/access.log main;
    client_max_body_size 1024M;
    proxy_cache_path /etc/nginx/cache keys_zone=one:10m;
    error_page 400 401 402 403 = /web/error/40x.html;

    # Define upstream servers (must be outside server block)
    upstream webui {
        server webui:8080;
    }
    upstream backend {
        server my_openai_frontend:3000;
    }

    # Common proxy headers (must be outside server block)
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # HTTP Servers 
    server {
        listen 8080 default_server;
        listen [::]:8080 default_server;
        rewrite ^(.*) https://$host:8443$1 permanent;
    }
    server {
        listen 8443 ssl default_server;
        listen [::]:8443 ssl default_server;
        ssl_certificate /usr/share/nginx/ssl/nginx.crt;
        ssl_certificate_key /usr/share/nginx/ssl/nginx.key;
        ssl_protocols TLSv1.3;
        ssl_prefer_server_ciphers off;
        server_tokens off;
        ssl_session_cache shared:SSL:10m;
        ssl_session_timeout 10m;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        gzip on;
        gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
        gzip_min_length 256;
        root /usr/share/nginx/www/;

        location /platform {
            try_files $uri $uri/ /index.html;
        }

        location /platform-dev {
            proxy_pass http://webui;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location ~* ^/(auth|user|admin|apikey|v1|usage)(/.*)?$ {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection $connection_upgrade;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_buffering off;
            proxy_request_buffering off;
            proxy_read_timeout 300s;
            proxy_connect_timeout 75s;
        }
    }
}

