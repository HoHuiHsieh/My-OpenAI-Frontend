# Authentication Configuration
oauth2:
  enable: true  # Set to false to disable authentication (for development)
  secret_key: my-secret-key
  algorithm: HS256
  access_token_expire_time: 3600  # 1 hour expiration for access tokens
  refresh_token_expire_time: 2592000  # 30 days expiration for refresh tokens
  
  # Default admin user settings
  default_admin:
    username: admin
    email: <admin_email>
    full_name: <admin_full_name>
    disabled: false
    password: <admin_password>

# PostgreSQL Database Configuration
database:
  host: postgres
  port: 5432
  username: postgresql
  password: password
  database: ai_platform_auth
  table_prefix: "myopenaiapi"  # Prefix for tables in the database

# Logging Configuration
logging:
  level: "DEBUG"  # Global logging level if not overridden by components
  database:
    enabled: true  # Enable logging to the database
    retention_days: 365  # How many days to keep logs in the database
  console:
    enabled: true  # Always log to console as a fallback
    format: "%(asctime)s - %(name)s - %(levelname)s - %(message)s"
  components:
    authentication: "DEBUG"
    database: "INFO"
    models: "INFO"

# Model Configuration
models:
  llama-3.3-70b-instruct:
    host: <llama_host_ip>
    port: 8001
    type: ["chat:base"]
    response:
      id: "meta/llama-3.3-70b-instruct"
      created: 1749095099
      object: "model"
      owned_by: "organization-owner"
  nv-embed-v2:
    host: <nv_embed_host_ip>
    port: 9001
    type: ["embeddings:base"]
    args:
      instruction: "Given a question, retrieve passages that answer the question."
    response:
      id: "nvidia/nv-embed-v2"
      created: 1749095099
      object: "model"
      owned_by: "organization-owner"
  whisper-large-v3-turbo:
    host: <whisper_host_ip>
    port: 8001
    type: ["audio:transcription"]
    response:
      id: "openai/whisper-large-v3-turbo"
      created: 1749095099
      object: "model"
      owned_by: "organization-owner"